추상 클래스
추상적 -> 정해지지 않은
		  -> 메서드의 구현 내용이 정해지지 않은
		  -> 공통적인
구체적 -> 정해진

1. 추상 클래스란?
	- 구현체가 없는 메서드가 포함된 클래스 : 추상메서드
		- abstract 예약어
	- 설계의 틀
	- 추상 클래스 : abstract 예약어가 필요
	
	- 완전히 구현된 인스턴스 메서드 정의 가능 : 하위클래스의 공통기능
	
2. 추상클래스 문법

final 예약어
- 변경 불가
1. 변수 
	- 상수
	final int num = 10;
	
2. 메서드
	- 메서드 재정의 불가
	
3. 클래스 
	- 상속 불가 
	
소스보기 : CTRL + 마우스 왼쪽키
	
	
메서드 재정의 시 접근제어자의 범위 변경
(좁은 쪽 -> 넓은 쪽)
default -> default, protected, public
protected - protected, public 
	
인터페이스(interface)

1. 인터페이스란?
API (Application Programming Interface)
- 설계 목적인 특수한 용도의 클래스
- 추상 메서드만 정의

2. 인터페이스  문법
 
interface 인터페이스명 {
	추상 메서드 ... 
}

public abstract 자동 추가 

3. 클래스에서 인터페이스 구현하기
class 하위클래스 implements 인터페이스명 {
	
}

4. 인터페이스 구현과 형변환(다형성)
5. 인터페이스의 요소 살펴보기
	1) 인터페이스 상수 
	2) 디폴트 메서드
	3)  정적 메서드
	4)  private 메서드 
	
인터페이스 활용하기
1. 한 클래스가 여러 인터페이스를 구현하는 경우


참고) 
	클래스간 상속 : 단일 상속(자바)

2. 두 인터페이스의 디폴트 메서드가 중복되는 경우

3. 인터페이스 상속하기
-> 다중 상속이 가능 