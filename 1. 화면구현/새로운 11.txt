제약 조건
1. 제약 조건이란?
- 제약 조건을 지정한 열에 제약 조건에 부합하지 않는 데이터를 저장할 수 없습니다. 

참고)
회원명 휴대전화번호 이메일 주소 전화번호 


키
	후보키 : 각 행을 대표할 수 있는 컬럼 또는 컬럼의 조합 : 중복 X, NULL X
		주민번호
		회원명 + 휴대전화번호
		회원명 + 이메일
		회원명 + 휴대전화번호 + 주소
		
	기본키
		후보키에서 선정된 키 -> 기본키 (중복 X, NULL X) : PRIMARY KEY - PK
		예) 주민번호 
		
	대리키
		: 기본키로 사용하기 적합한 컬럼없을때는 증감번호 형식의 대리키(기본키)
		
	외래키
		: 다른 테이블의 기본키를 참조하는 키 -> 제약조건
		(부모 테이블에 자식 데이터가 있으면 삭제 불가 - 참조 무결성 제약조건)



2. 제약 조건 종류 
- NOT NULL : NULL을 미허용 : 반드시 값을 입력해야 하는 항목 
- UNIQUE : 중복이 허용되지 않는 제약조건 (NULL 중복 제외)
- PRIMARY KEY : 기본키 : 테이블의 각 행을 대표하는 항목 ( 중복 X -> UNIQUE + NOT NULL )
- FOREIGN KEY : 외래키 : 다른 테이블 참조 하는 키 + 참조 무결성 제약조건
- CHECK : 수식, 조건 통제, CHECK(age >= 18)

3. 데이터 무결성이란?
- 데이터베이스에 저장되는 데이터의 정확성과 일관성을 보장한다는 의미
- 제약 조건은 이러한 데이터 무결성을 지키기 위한 안전장치로서 중요한 역할

1) 영역 무결성 (domain integrity)
	- 자료형 : 동일한 자료형으로 값을 유지 
			숫자가 필수인 항목 숫자로만 한정 
			
2) 개체 무결성(entity integrity)
	-  기본키 : - 각 행을 대표 - UNIQUE + NOT NULL 
	
3) 참조 무결성(referential integrity)	
	- 외래키 제약조건 
		- 부모테이블에 자식 테이블 데이터가 있으면 삭제 불가 

4. 빈값을 허락하지 않는 NOT NULL
	- 필수 항목 
	예) 회원 테이블 
		- 아이디 
		- 비밀번호 
		- 회원명 
		..
	
	참고)
		CREATE TABLE 테이블명 (
			컬럼명 자료형 [제약 조건 - NULL | NOT NULL | UNIQUE | DEFAULT ... | CHECK ... ]
		);
		
		ALTER TABLE 테이블 MODIFY 컬럼명 자료형 [제약조건]
		
		컬럼의 제약조건은 0개 이상 지정 
	
5. 제약 조건 확인
- USER_CONSTRAINTS : 제약조건 
- USER_CONS_COLUMNS : 제약조건이 부여된 컬럼명 

테이블약자_컬럼약자_제약조건약자 

SELECT * FROM USER_CONSTRAINTS;

6. 제약 조건 이름 직접 지정
	CONSTRAINT 제약조건명 
	
7. 이미 생성한 테이블에 제약 조건 지정
ALTER TABLE 테이블명 MODIFY 테이블명 [자료형] [제약조건];

8. 제약 조건 삭제

ALTER TABLE 테이블 명 DROP CONSTRAINT 제약조건명;

중복되지 않는 값 UNIQUE
1. 테이블을 생성하여 제약 조건 지정
	
2. 제약 조건 확인
3. 중복을 허락하지 않는 UNIQUE
4. UNIQUE 제약 조건과 NULL 값
	- UNQUE  : 중복 값을 허용 X, NULL은 중복 허용  : 테이블을 대표하는 키 될수 없다
	
5. 테이블 생성하며 제약 조건 이름 직접 지정
6. 이미 생성한 테이블에 제약 조건 지정

7. 제약 조건 삭제


유일하게 하나만 있는 값 PRIMARY KEY : 기본키
-  UNIQUE와 NOT NULL 제약 조건의 특성을 모두 가지는 제약 조건
- 테이블에 하나밖에 지정할 수 없습니다.
- 개체 무결성 제약조건
- 자동 인덱스가 생성 


1. 테이블을 생성하며 제약 조건 지정하기
2. 테이블을 생성하며 제약 조건 이름 직접 지정하기
3. PRIMARY KEY 제약 조건을 지정한 열 확인(중복 값을 입력했을 때)
4. PRIMARY KEY 제약 조건을 지정한 열 확인(NULL 값을 입력했을 때)
5. CREATE문에서 제약 조건을 지정하는 다른 방식
- 기본키 : 여러 컬럼 조합 가능 


참고)
	CONSTRAINT_TYPE 
			C : 일반 제약조건 - NOT NULL, CHECK ...
			U : UNIQUE 제약조건 
			P : PRIMARY KEY 제약조건 
			R : FOREIGN KEY 제약조건


다른 테이블과 관계를 맺는 FOREIGN KEY : 외래키 
- 서로 다른 테이블 간 관계를 정의하는 데 사용하는 제약 조건
- 지정한 열을 다른 테이블의 특정 열에서 참조하겠다는 의미
- 참조 무결성 제약조건 

10~40, 50?

참고)
	외래키가 있는 테이블 - 자식 테이블  (EMP - DEPTNO)
	외래키가 참조하는 기본키를 소유한 테이블 - 부모 테이블 (DEPT - DEPTNO)

1. FOREIGN KEY 지정하기
	CREATE TABLE 테이블명 (
			컬럼명 자료형 [CONSTRAINT 제약조건명] REFERENCES 참조 테이블 (참조할 컬럼명)
	);
	
2. FOREIGN KEY로 참조 행 데이터 삭제하기
	- 참조 무결성 제약조건 : 부모 테이블에 자식 레코드가 존재하면 부모 데이터 삭제 불가 
									(자식 데이터를 먼저 삭제 -> 부모 삭제)
					
	- ON DELETE CASCADE  : 부모 테이블 데이터 삭제 되면 -> 자식 데이터도 연쇄 삭제
	- ON DELETE SET NULL : 부모 테이블 데이터가 삭제 되면 -> 자식 데이터 외래키 값 NULL 변경
	
데이터 형태와 범위를 정하는 CHECK
- 열에 저장할 수 있는 값의 범위 또는 패턴을 정의할 때 사용


기본값을 정하는 DEFAULT
REG_DT 현재 시간 자동

DEFAULT '기본값' : 값을 입력하지 않으면(NULL 이면 기본값 추가)


제약 조건 비활성화, 활성화

비활성화
ALTER TABLE 테이블명 DISABLE CONSTRAINT 제약조건명;

활성화
ALTER TABLE 테이블명 ENABLE CONSTRAINT 제약조건명;
