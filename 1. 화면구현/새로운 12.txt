DISTINCT

SELECT [ALL|DISTINCT] 컬럼명1, 컬럼명2 ... FROM 테이블명

ALL-기본값 : 중복을 포함한 모든 레코드
DISTINCT : 중복을 제외한 레코드 
				- 컬럼이 여러개인 경우 컬럼을 조합한 값이 중복 체크의 기준 

NULL : 값이 없음 - 연산불가
			참고) 연산을 위해서는 값이 필수
			
		IS NULL : 컬럼이 NULL인지를 체크
		IS NOT NULL : 컬럼이 NULL이 아닌지를 체크
		
		참고) IS : ~ 인지 아닌지

ORDER BY 절

SELECT * FROM 테이블명 ... ORDER BY 컬럼명 [ASC|DESC]

1) ASC : 오름차순 (기본값)
2) DESC : 내림차순 

ORDER BY 컬럼명 [ASC|DESC] - 1차정렬, 컬럼명 [ASC|DESC] - 2차 정렬

WHERE절과 연산자
1. 필요한 데이터만 출력하는 WHERE절
- 조건식 : 참 거짓을 판별하는 연산식 (비교 연산자, 논리 연산자)
		-> 참이되면 - 레코드 출력 

2. 여러 개 조건식을 사용하는 AND, OR 연산자

논리 연산자
	AND : 조건이 모두 참 -> 참 
	OR : 조건 중에서 하나라도 참이면 참
	NOT : 참 -> 거짓, 거짓 -> 참 
			: 조건식을 반대로 변경 

3. 연산자 종류와 활용 방법 알아보기
1) 산술 연산자
	+, -, /, * 
	
2) 비교 연산자
	>, <, >=, <=, 
	= : 같다
	
	다르다 
	!=
	<>
	^=
	
참고)
	DUAL : 더미 테이블(DUMMY) 
	
	SELECT 10 + 20 FROM DUAL; - FROM DUAL : 생략 불가 (오라클)
											 - MySQL : FROM DUAL 생략 가능
	
3) 논리 부정 연산자
4) IN 연산자 : OR 조건의 = 을 대체 
	
	참고)
		NOT IN : 포함되지 않은 조건 
	
5) BETWEEN A AND B 연산자
	SAL >= 1000 AND SAL <= 2000
	
	SAL BETWEEN 1000 AND 2000;
	
6) LIKE 연산자와 와일드 카드
	- 포함 패턴으로 검색
	
	- 컬럼명 LIKE '검색어';  컬럼명 = 검색어
	- 컬럼명 LIKE '검색어%';  검색어로 시작하는 패턴 
	- 컬럼명 LIKE '%검색어';  검색어로 끝나는 패턴 
	- 컬럼명 LIKE '%검색어%'  검색어가 중간에 포함된 패턴
	
	- _ : 문자 한개
		- 첫번째 문자는 아무거나 
		- 두번째 문자는 L이 나오는 패턴 
			LIKE '_L%'
	
	- %, _는 특수한 기능이 동작 -> 문자 그대로 사용 가능?
		-> ESCAPE로 표시 -> 그냥 문자로 인식 
		
	
7) IS NULL 연산자
	NULL : 값이 없음 
			: 연산 불가  /  연산은 반드시 값이 존재해야 가능 
			
	=, >, < 로 비교 연산 불가 
	
	- 별도 연산자를 통해서 NULL인 컬럼을 조회 
		IS NULL : NULL인지 체크
		IS NOT NULL : NULL이 아닌 값 체크 
		
		참고) IS : ~ 인지 아닌지 
		
		NULL을 처리하는 함수 
			- NVL(NULL 포함된 컬럼명, 기본값)
			- NVL2(NULL 포함된 컬럼명, 값이 있는 경우 대체 값, 값이 없을때 대체 값);
	
		참고)
			빈값 '' : 
				- 오라클 : NULL로 판단 
				- MySQL : 빈 값으로 판단(NULL이 아니다)
				
8) 집합 연산자
	- 집합 이론 + 관계 대수(조회 - 조인)
	
	집합의 가장 중요한 특징?
	A - 1,2,3,4
	B - 3,4,5,6
	A와 B의 합집합 - 2,1,3,4,5,6
		- 중복이 없다
		- 순서 유지 X
		
	UNION : 합집합 
		- 중복 X
		
		UNION ALL : 중복을 허용 
		
	INTERSECT : 교집합  - 공통 레코드 
	MINUS : 차집합  - 공통 레코드 제거 
	
	차이점)
		MySQL : INTERSECT, MINUS는 존재 X -> IN, NOT IN을 적절하게 활용해서 대체 