자바스크립트
HTML - 뼈대
CSS - 스타일
JS - 기능

1. 실습방법 안내
- 브라우저 - 콘솔
	- 렌더링 엔진 + 자바스크립트 해석 엔진(V8)
- SHIFT + 엔터 -> 줄 개행

자바스크립트 기초 문법
1. 자바스크립트 사용하는 방법
- HTML 문서에서 사용하는 방법
- script 태그 정의된 자바스크립코드 해석
1) script 태그 안에 정의하는 방식
2) HTML 태그의 이벤트 처리기 속성
	on이벤트="이벤트 처리기"
	
3) 외부 스크립트 파일로 사용하는 방법
	script
		src="스크립트 파일 경로"
		
		- 확장자 .js

2. 자바스크립트 주석 처리
	- 자바스크립트 엔진이 해석 X
	1) 설명
	2) 실행 배제
	
	- 한줄 주석 : // 한줄
	- 여러줄 주석 : /* 여러줄 설명 ... */
	
	참고) 새로고침 CTRL + R / F5
	
3. 변수
1) 정의 
	공간의 이름 
	변하는 수 
	
2) 변수 선언
	var 변수명;
	
	변수명 = 값; (저장) / 최초로 값을 저장 -> 초기화 
	
	var 변수명 = 값; // 선언과 동시에 초기화 
	
	참고)
		; -> 문장의 끝 
		
		console.log(값); -> 값의 출력 기능 

3) 선언자 종류 
	var,
	let, const
	
4) 선언 방법 
	변수가 여러개 있는 경우
	변수 선언자 변수명, 변수명, 	변수명;
5) 변수 선언 생략
6) 변수 끌어올림과 변수 중복 선언
- 변수 중복 선언시 기존 값이 변경

7) 변수의 명명규칙 
1) 알파벳(대소문자), 숫자, 특수문자(_, $)
	- 한글도 사용 가능 - 권장 X
2) 숫자는 변수명 앞에 올 수 없다.
3) 예약어는 쓸 수 없다.
	(return, if, for ...throw...)

4) 변수명은 의미있는 단어 작성 

변수명을 짖는 관례 ( 함수명 적용 )
카멜표기법

	- 단어의 첫문자는 대문자, 다만 시작 단어는 소문자 
	
	
8) 변수에 저장할 수 있는 자료형
자료형 : 값의 형태, 형식

참고) typeof : 자료형을 체크해 보는 연산자

- 문자형(string) : " 또는 '로 값을 감싸면 문자형
	var str = 'ABC';
	var str = "ABC";
	
- 숫자형(number)
	- 정수
	- 실수

- 논리형(boolean)
	- 참, 거짓
	- true (참)
	- false (거짓)
	
- null 

- undefined : 값이 정해지지 않은 상태 - 변수를 선언만한 경우

4. 연산자
	- 항 : 연산에 사용되는 값
			연산에 사용되는 값의 갯수
			1 : 단항 연산
			2 : 이항 연산
			3 : 삼항 연산
			
	- 연산자 : 연산에 사용되는 기호 
	
	
	
	1) 산술 연산자
		- 더하기(+), 빼기(-), 곱하기(*), 나누기( / ), 나머지( % )
		
		- 문자형 + 연산자 : 수치 연산 X, 문자를 결합
		
		- 문자 + 숫자 -> 문자
		
	2) 대입 연산자
		- =
		- 연산의 우선순위가 가장 낮음
		
	3) 증가감소 연산자
		- 단항 연산
		- 1씩 증가, 1씩 감소 
		- ++
		- --
	
	4) 복합 대입 연산자
		산술 연산 + 대입
		
	5) 부호 연산자 
		- : 부호 반전 
	
	6) 비교 연산자
		크다(>), 작다(<), 크거나 같다(>=), 작거나 같다(<=)
		같다(==)
		같지않다(!=, !==)
		
		- 연산의 결과가 논리값( 참, 거짓 ) -> 판별식에서 주로 사용(조건식, 반복문)
		
		참고)
			동일성 비교 : 동일한 주소 (===)
			동등성 비교 : 동등한 가치 (==)
		
	7) 논리 연산자
		AND 연산 : 교집합과 비슷 
			- &&
			
			true && true -> true
			
		OR 연산 : 합집합
			- ||
			
			true || true -> true
			true || false -> true
			false || true -> true 
		
		NOT 연산(부정 연산)
			- ! 
		
		연산자의 우선순위
		비교 연산 > 논리 연산
		
		false로 인식하는 값
			- 0, ", undefined, null
		
		true로 인식하는 값
			- false 인식하는 값 이외의 값
		
		|| : 기본값
		&& : 간단한 조건식을 대체
		
	8) 삼항 조건 연산자
	
	조건식 ? 참일때 : 거짓일때
	(1항)		(2항)		(3항)
	
	참고)
		조건식 : 참 거짓을 판별하는 판별식(주로 비교, 논리 연산...)
	
	연산자의 우선순위
	
	= (대입 연산자)	< 								논리 < 비교 										<  (...)
	
5. 제어문

1) 조건문

if (조건식) { 
	// 조건식이 참일때 실행되는 코드 
} else {
	// 조건식이 거짓일때 실행되는 코드  
} 

if (조건식1) {
	// 조건식1이 참일때 실행되는 코드
	
} else if(조건식2){
	// 조건식1이 거짓이고 조건식2가 참일때 실행되는 코드 
	
} else if(조건식3) {
	// 조건식1, 조건식2 -> 거짓, 조건식3이 참일때 실행되는 코드 

} else {
	모든 조건이 거짓일때 실행되는 코드
}

6. 선택문
	- 값의 일치 여부 체크, 선택 
	- 키워드가 값과 일치하는 시점 -> 실행 시점, break를 만날때까지 실행
	
	switch(키워드) {
		case 값1 : 
			// 키워드가 값1과 일치하는 경우 실행되는 코드
		case 값2 : 
			// 키워드가 값2와 일치하는 경우 실행되는 코드
		case 값3 : 
			// 키워드가 값3과 일치하는 경우 실행되는 코드..
		...
		default : 
			// 모든 키워드가 매칭이 안되면 실행되는 코드 
	}
	
7. 반복문

1) while

while(조건식) {
	// 조건식이 참일때 반복되는 코드 
}

2) do-while

do {
	// 조건식이 참일때 반복되는 코드 
	// 조건이 거짓이라도 한번은 실행
} while(조건식);

조건식 : 반복을 유지하는 조건 / 반복을 중단할 수 있는 조건...

반복 횟수를 지정하는 반복
1) 초기값 ( var num = 1)
2) 증가식 ( num++)
3) 조건식 (num<=100)

3) for : 횟수가 정해진 반복문에 특화
for(초기화식; 조건식; 증감식) {
	// 조건식이 참일때 실행되는 코드 
}

횟수 : 순서(index) : 0부터 시작하는 순서 

변수명 관례 : 초기화식 변수명을 i부터 사용(알파벳 순서...)

반복 중단 : for, while, do~while
	- break
	
반복 건너뛰기
	- continue : 현재 반복을 중단하고 다시 시작

중첩 반복문
	- 반복문 안에 반복문

ECMAScript 6 부터 추가된 데이터 타입
1) 통일성 : 표준안
2) 신기술 : 매년 스펙 추가

1. 심벌(Symbol)
1) 심벌의 생성
	Symbol() : 생성할때마다 항상 유일한 값 
	
2) 심벌과 문자열 연결하기 

2. 템플릿 리터럴
	` ... ` : 역따옴표 
	
	
	
	참고) 메타 문자
		\n : 줄 개행
		\t : 탭키 1번
		\b : 백스페이스 키 1번

\r\n : 엔터키
\r : 커서를 가장 첫번째 칸 이동
\n : 줄 개행		

3. 보간 표현식(placeholder)
`${변수명}`

간단한 연산
`${num1 + 100}
`${Date.now()}`
