액션태그
- 액션 태그는 서버나 클라이언트에게 어떤 행동을 하도록 명령하는 태그
- 스크립트 태그, 주석, 디렉티브 태그와 함게 JSP 페이지를 구성하는 태그
- 커스텀 태그의 일종


액션태그의 종류
1. forward 액션 태그의 기능과 사용법
<jsp:forward page="이동할 페이지 - JSP, html, text, servlet 경로"  />
 - 페이지 이동 / 버퍼의 통제 (버퍼가 한번에 전송하는게 효과적이기 때문)
 - 기존 출력 버퍼를 취소, page에 정의된 경로의 출력 결과물을 버퍼에 출력하고 비운다.

2. include 액션 태그의 기능과 사용법
- 페이지 추가 / 버퍼의 통제
<jsp:include page="이동할 페이지 - JSP, html, text, servlet 경로" />

- forward, include -> 요청 처리중에 버퍼에 추가

3. include 액션 태그와 include 디렉티브 태그의 차이
4. param 액션 태그의 기능과 사용법
	- param 액션 태그는 현재 JSP 페이지에서 다른 페이지에 정보를 전달하는 태그
	
서블릿
	RequestDispatcher 인터페이스
		forward(HttpServletRequest, HttpServletResponse) : <jsp:forward ... />
		include(HttpServletRequest, HttpServletResponse) : <jsp:include ... />
	
	- 구현 객체 : 요청 처리 과정중에 생성 - HttpServletRequest::getRequestDispatcher(...)
		
MVC 모델

M(Model) - 기능(Service) 
			- DTO(Data Transfer Object) - 데이터 객체(멤버 변수 + getter, setter ... ) / VO(Value Object) 
			- Validator : 유효성 검사 
			- DAO(Data Access Object) - 데이터 접근 객체 
			...

V(View) - 출력 템플릿 영역 - JSP

C(Controller) - 요청과 응답 중재자 - 서블릿(Servlet)
	
5. 자바빈즈 액션 태그의 기능과 사용법
1) 자바빈즈 :  데이터 표현을 목적으로 하는 자바 클래스
2) 자바빈즈 작성 규칙
	- 기본 생성자가 반드시 존재(매개 변수가 X)
	- 데이터 전달용 객체(DTO)
	- private  범위의 멤버 변수 + getter,setter
	
3) useBean 액션 태그로 자바빈즈 사용하기
	id : 
	class : 
	scope : -> 생성된 객체 id 변수가 유지될 속성 범위
			- page : 기본값 : PageContext pageContext
			- request : HttpServletRequest request
			- session : HttpSession session
			- application : ServletContext application
			
4) setProperty 액션 태그로 프로퍼티 값 저장하기
	name : 
	property : 
	value : 
	param : -> name 속성이 다른 명칭을 DTO 클래스의 특정 속성 매칭
	
5) getProperty 액션 태그로 프로퍼티의 값 가져오기
	name: 
	property:
	param:

속성을 관리하는 4가지 객체
1) PageContext pageContext : 현재 페이지 내에서 속성값 유지
2) HttpServletRequest request : 요청 처리 범위 내에서 속성값 유지
3) HttpSession session : 세션이 유지되는 동안 속성값이 존재
4) ServletContext application : 애플리케이션 실행동안 유지
	
	void setAttribute(String key, Object value) - 속성 추가
		- key : 속성을 찾기위한 값, EL식의 속성(변수명)명
		
	Object getAttrubute(String key) - 속성조회 
	
	void removeAttribute(String key) - 속성 삭제
	
적용 범위
pageContext < request < session < application
	
JSP 내장객체
1. HttpServletRequest request
2. HttpServletResponse response
3. JspWriter out
4. HttpSession session
5. ServletContext application
6. PageContext pageContext
7. Object page = this
8. ServletConfig config
9. Throwable exception / isErrorPage = true

속성 처리 객체와 메서드의 종류
pageContext, request, session, application

1. setAttribute(String name, Object value)
2. getAttrubute(String name)
3. removeAttribute(String name
4. getAttributeNames()