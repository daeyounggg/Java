JSTL
1. 설치하기
core 라이브러리 : 제어구문, 반복문 등
fmt 라이브러리 : 형식화, 숫자 형식, 날짜 형식, 시간대, 다국어
functions 라이브러리 : 문자열 가공 등
sql 라이브러리

https://jakarta.ee/specifications/tags/3.0/tagdocs/

URI

2. 코어(core) 라이브러리
	uri="jakarta.tags.core"
	 참고)
		javaee 9 ->  JSTL 1.2 
		uri="http://java.sun.com/jsp/jstl/core"
		
1) <c:set>
	- 변수(EL식 속성) 설정
	- ${...}
	- var : 변수명
	- value : 값
	- scope : page(기본값), request, session, application
	
2) <c:remove>	
	- 속성 삭제
	- var : 삭제할 EL식 속성명(변수명)
	- scope를 설정 X -> 전체 범위 속성을 삭제
	- scope : page, request, session, application
	
3) <c:if>
	- 조건식
	- test="${조건식}" 
	- else ? : -> test 조건식을 반대로
	- test에 사용할 수 있는 상수 : true, false
		test="true" , test="false"
		
4) <c:choose>
	- 다중 조건,  선택문
	
	<c:choose>
		<c:when test="${조건식}">
			참일때 출력
		</c:when>
		...
		
		<c:otherwise>
			모든 조건이 거짓일때 출력
		</c:otherwise>
	</c:choose>

5) <c:forEach>
	- 반복문 
	- 횟수 
		begin : 시작 숫자
		end : 종료 숫자
		step : 증감 숫자, 기본값 1 - 1씩 증가
		var : 변수(카운터 변수)
		 
	- 배열, 컬랙션(Collection - List, Set), Iterator, Enumeration
	- 콤마(,) 문자열 
	- <c:forEach>액션의 items 애트리뷰트를 이용해서 처리할 수 있는 데이터
	- items : 
	- var 
	- varStatus -> 반복 상태에 대한 정보가 담겨있는 객체
		- index : 순서(0부터 시작하는 순번)
		- count : 순서(1부터 시작하는 순번)
		- first : 첫번째 행인지?
		- last : 마지막번째 행인지? 
		- current : 현재 반복 요소
		
6) <c:forTokens>
	- java.util.StringTokenizer 
	- items
	- var 
	- delims : 구분 문자 
	
7) <c:catch>
	- 자바 코드 없이 태그 방식으로 예외 처리 
	- var : 예외가 발생하면 생성될 예외객체 변수명
			- 예외가 없으면 null
			
8) <c:redirect>
		- 페이지 이동
		- url : 이동할 주소
		- HttpServletResponse::sendRedirect(...)
			: 응답 헤더 Location: 주소
		
		- <c:param>
			- name
			- value
			- 쿼리스트링 추가 ?name=value...
			
9) <c:import>
		- 버퍼에 추가
		- 외부 서버 자원도 가능
		- url: 주소
		- <c:param>으로 요청 데이터를 함께 전송
		- var : 출력 버퍼를 변수에 담는다.
		
	참고)
		<jsp:include ... />
			- 동일 서버 자원만 가능
			
10) <c:url> 
	: 컨택스트 경로가 포함된 주소
	
	value : 주소
	var : 컨택스트 경로가 포함된 주소 -> 변수
	<c:param> : 쿼리스트링 값 추가 
	
11) <c:out> 	
		value : 출력할 값
		escapeXml : false - HTML 태그를 해석

3. 포매팅(fmt) 라이브러리
	- 형식화, 지역화
	uri="jakarta.tags.fmt" // JSTL 3.0
	prefix="fmt"
	
	
	JSTL 1.2
	uri="http://java.sun.com/jsp/jstl/fmt"
	
1) fmt:formatDate 	
	- java.text.SimpleDateFormat -> 날짜 형식화 클래스
		(java.util.Date)
	- value : Date 객체
	- type : date - 기본값 : 날짜 표기
				time - 시간 표기
				both - 날짜와 시간 표기
				
	- dateStyle - full | long | medium | short
	- timeStyle - full | long | medium | short
	- pattern="패턴..."
				
2) fmt:formatNumber
   - java.text.DecimalFormat -> 숫자에 대한 형식화
   - value : 값 -> 지역화 설정에 따른 형식화
   - groupingUsed : true - 기본값(세자리 마다 콤마(,))
                 false - 콤마 X

   - type : percent - 퍼센트 표기, currency - 통화
   - pattern 
      0 패턴
      # 패턴
	
3) fmt:setLocale
	- 지역화 설정 변경
	- value : 언어코드_국가코드 예) kr_ko, en_us
				언어코드 예) en, ko
				
4) fmt:timeZone과 fmt:setTimeZone
	- value : 시간대 ID - Asia/Seoul, America/New_York 
	- fmt:timeZone : 열린태그, 닫힌 태그, 사이에 있는 시간을 변경
	- fmt:setTimeZone : 태그 설정 이후 있는 시간 태그에 적용
	
5) fmt:setBundle과 fmt:bundle
	- 메세지 파일(properties 파일 생성 - 클래스패스에 위치해야 인식)
	- basename="메세지 파일 자원 (디렉토리명.파일명)"
		basename="messages.commons"
	- fmt:message
				- key : properties 파일의 키값
				- var : 출력 데이터를 변수에 담기
				
	- java.time.MessageFormat
	
	참고)
	properties 파일 형식
	# 주석 ...
	키=값
	키=값
	
	java.util.ResourceBundle
		

6) fmt:requestEncoding

4. 함수(functions) 라이브러리	
	uri="jakarta.tags.functions"







