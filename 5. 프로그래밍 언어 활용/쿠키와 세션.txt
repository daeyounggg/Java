쿠키
- 개인화(브라우저별)된 서비스 구현 기술
- 개개인을 구분할 수 있는 값 -> 사용자가 사용하는 브라우저에 저장(쿠키 데이터)

CTRL + SHIFT + N -> 시크릿모드

1. 쿠키의 동작과정

1) 쿠키 생성단계
서버 -> 응답 헤더(Set-Cookie: 키=값; 키=값; ...)
HttpServletResponse
	- addCookie(Cookie cookie)

2) 쿠키 저장단계

브라우저에서 응답 헤더를 참고해서 저장

3) 쿠키 전송단계

매 요청시 마다 요청 헤더에 Cookie 항목으로 서버에 전송 

HttpServletRequest
	- Cookie[] getCookies()

2. Cookie 클래스의 메서드 종류

3. 쿠키 객체 얻기
4. 쿠키 객체의 정보 얻기
5. 쿠키 삭제


세션
- 개인화된 서비스 구현 기술
- 데이터 저장을 브라우저 X, 서버 내에 저장

HttpSession 인터페이스
		HttpSession getSession();
		
1. session 내장객체 메서드 종류

2. 세션 생성
	void setAttribute(String name, Object value)
	
3. 세션 정보
	Object getAttribute(String name)
	
4. 세션 삭제
	void removeAttribute(String name)
	void invalidate() : 세션 비우기 (전체 삭제) - 로그아웃
	
5. 세션 유효 시간 설정
- setMaxInactiveInterval

쿠키와 세션의 차이

쿠키(Cookie)   세션(Session)
브라우저에 저장   서버에 저장
서버 부담 X   서버 부담 O
보안에 불리   보안에 유리
서버 다중화에 유리   서버 다중화에 불리

회원가입, 로그인 구현하기 
TDD - 설계 + 테스트

servlet-api
servlet.jsp-api
jstl-api
jstl-impl

lombok

암호화
1) 양방향 암호화
	- 암호화 <--> 복호화
	- AES256
	- Aria ...
	
2) 단방향 암호화 - 해시 
	- 복호화 X(원 데이터로 복구 X)
	
	- 고정값 해시 : 같은 값에 대해서 같은 해시
		md5
		sha1, sha256, sha516
		
		abc -> md5 -> c13b6afecf97ea6b38d21a8f5167fa1e
							c13b6afecf97ea6b38d21a8f5167fa1e
			-> sha512 -> ddaf35a193617abacc417349ae20413112e6fa4e89a97ea20a9eeee64b55d39a2192992a274fc1a836ba3c23a3feebbd454d4423643ce80e2a9ac94fa54ca49f
	
	- 유동 해시 : 같은 값에 대해서 해시를 만들때 마다 다른 해시 -> 예측 불가능성
		BCrypt
			abc -> $2y$10$oPw/gMbP0leRRuQXsO/oCOhaWFXqvAKbxgObpR8OoRmhs1qmxvq/i
				-> $2y$10$KVYyQGZ2iGYKhpxAmq8e3ewxuNo4Vft5T/sYh4PbSAXPgnzI/CZuy
				-> $2y$10$hDqGqEF1/PEgVjsya2Y/fubU/AmbbgQE0M9sF6o85epeVKMIEdDg2
			